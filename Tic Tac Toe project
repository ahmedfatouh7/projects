# Online Python compiler (interpreter) to run Python online.
# Write Python 3 code in this online editor and run it.
def main():
   board = create_grid()
   printPretty(board)
   whoGoesFirst()
   symbol_1,symbol_2=inputPlayer_symbol()
   full = isFull(board, symbol_1, symbol_2) # The function that starts the game is also in here.


def create_grid():
    '''Create the board to begin the tic tac toe game.'''
    print("Here is the playboard: ")
    board = [[" ", " ", " "],
             [" ", " ", " "],
             [" ", " ", " "]]        
    return board
    
def printPretty(board):
    '''Request the user to decide on the game board dimensions.'''
    rows = len(board)
    cols = len(board)
    print("-----+-----+-----")
    for r in range(rows):
        print(board[r][0], "   |", board[r][1], "   |", board[r][2])
        print("-----+-----+-----")
    return board
    
def whoGoesFirst():
  '''Randomly choose the first player.'''
  import random   
  list = ['player_1','player_2']      
  print('The begin player is ' + random.choice(list) )      
     

def inputPlayer_symbol():
  '''input the two players symbols'''
  symbol_2 = []
  while True:
    symbol_1 = input('please enter players symbols').upper()
    if symbol_1 in ['X','O']:
         if symbol_1 == 'X':
            symbol_2.append('O')  
            print('The begin player symbol is '+ symbol_1)  
            print('The other player symbol is '+ str(symbol_2))
            break
         if symbol_1 == 'O':
            symbol_2.append('X') 
            print('The begin player symbol is '+ symbol_1)  
            print('The other player symbol is '+ str(symbol_2))
            break
    else: 
         print('The input is not X or O')  
         continue
  return(symbol_1,symbol_2)     

def startGamming(board, symbol_1, symbol_2, count):
    '''Tic tac toe game starts.'''
      # Decides the turn
    player = []  
    if count % 2 == 0:
        player = symbol_1
    elif count % 2 == 1:
        player = symbol_2
    print("Player "+ str(player) + ", it is your turn. ")
    
    while True : 
    
        try:
             row = int(input("Pick a row:"
                    "[upper row: enter 0, middle row: enter 1, bottom row: enter 2]:"))
             column = int(input("Pick a column:"
                       "[left column: enter 0, middle column: enter 1, right column enter 2]"))
             if row in [0,1,2] and column in [0,1,2] :
                 break
             else:
                 continue
        except ValueError:
          print("You must enter an interger value between 0 and 2")
          continue   
      
      
    # Check if players' selection is out of range
    while (row > 2 or row < 0) or (column > 2 or column < 0):
        outOfBoard(row, column)
        row = int(input("Pick a row[upper row:"
                        "[enter 0, middle row: enter 1, bottom row: enter 2]:"))
        column = int(input("Pick a column:"
                           "[left column: enter 0, middle column: enter 1, right column enter 2]"))

        # Check if the square is already filled
    while (board[row][column] == symbol_1)or (board[row][column] == symbol_2):
        filled = illegal(board, symbol_1, symbol_2, row, column)
        row = int(input("Pick a row[upper row:"
                        "[enter 0, middle row: enter 1, bottom row: enter 2]:"))
        column = int(input("Pick a column:"
                            "[left column: enter 0, middle column: enter 1, right column enter 2]"))    
        
    # Locates player's symbol on the board
    if player == symbol_1:
        board[row][column] = symbol_1
            
    else:
        board[row][column] = symbol_2
    
    return (board)

def isWinner(board, symbol_1, symbol_2, count):
    '''  Determine if a player wins or gets a tie in the game using the game logic.'''
# This function checks if any winner is winning
    winner = True
    # Check the rows
    for row in range (0, 3):
        if (board[row][0] == board[row][1] == board[row][2] == symbol_1):
            winner = False
            print("Player " + symbol_1 + ", you won!")
   
        elif (board[row][0] == board[row][1] == board[row][2] == symbol_2):
            winner = False
            print("Player " + str(symbol_2) + ", you won!")
            
            
    # Check the columns
    for col in range (0, 3):
        if (board[0][col] == board[1][col] == board[2][col] == symbol_1):
            winner = False
            print("Player " + symbol_1 + ", you won!")
        elif (board[0][col] == board[1][col] == board[2][col] == symbol_2):
            winner = False
            print("Player " + str(symbol_2) + ", you won!")

    # Check the diagnoals
    if board[0][0] == board[1][1] == board[2][2] == symbol_1:
        winner = False 
        print("Player " + symbol_1 + ", you won!")

    elif board[0][0] == board[1][1] == board[2][2] == symbol_2:
        winner = False
        print("Player " + str(symbol_2) + ", you won!")

    elif board[0][2] == board[1][1] == board[2][0] == symbol_1:
        winner = False
        print("Player " + symbol_1 + ", you won!")

    elif board[0][2] == board[1][1] == board[2][0] == symbol_2:
        winner = False
        print("Player " + str(symbol_2) + ", you won!")

    return winner

def isFull(board, symbol_1, symbol_2):
    '''Players play by selecting an empty spot on the board.'''
    '''Fill the empty selected spot with the playerâ€™s sign.'''
 # This function check if the board is full
    count = 1
    winner = True
    while count < 10 and winner == True:
        gaming = startGamming(board, symbol_1, symbol_2, count)
        pretty = printPretty(board)
        
        if count == 9:
            print("The board is full. Game over.")
            if winner == True:
                print("There is a tie. ")

        # Check if here is a winner
        winner = isWinner(board, symbol_1, symbol_2, count)
        count += 1
    if winner == False:
        print("Game over.")
        
    # This is function gives a report 
    report(count, winner, symbol_1, symbol_2)

def outOfBoard(row, column):
# This function tells the players that their selection is out of range
    print("Out of boarder. Pick another one. ")
    
def illegal(board, symbol_1, symbol_2, row, column):
    print("The square you picked is already filled. Pick another one.")
    
def report(count, winner, symbol_1, symbol_2):
    print("\n")
    input("Press enter to see the game summary. ")
    if (winner == False) and (count % 2 == 1 ):
        print("Winner : Player " + symbol_1 + ".")
    elif (winner == False) and (count % 2 == 0 ):
        print("Winner : Player " + str(symbol_2) + ".")
    else:
        print("There is a tie. ")    
main()
